
- name: desactivar  memoria Swap
  shell: swapoff -a
  become: yes
  
- name: particion swap del /etc/fstab
  replace:
    path: /etc/fstab
    regexp: '^([^#].*?\sswap\s+.*)$'
    replace: '# \1'
  become: yes

- name: reiniciar server
  reboot:
  become: yes

- name: m√≥dulo de Kernel br_netfilter
  modprobe:
    name: br_netfilter
    state: present
  become: yes

- name: enmascaramiento en la zona public
  firewalld:
    masquerade: yes
    state: enabled
    permanent: true
    zone: public
  become: yes

- name: Configuramos el AllowZoneDrifting=no en firewalld
  lineinfile:
    dest: /etc/firewalld/firewalld.conf
    regexp: '^AllowZoneDrifting='
    line: "AllowZoneDrifting=no"
    state: present
  become: yes
  
- name: SDN Flannel para Azure 8285 UDP
  firewalld:
    port: 8285/udp
    permanent: true
    state: enabled
  become: yes
  
- name: SDN Flannel para Azure 8472 UDP
  firewalld:
    port: 8472/udp
    permanent: true
    state: enabled
  become: yes

- name: firewalld (Red Hat)
  systemd:
    name: firewalld
    state: restarted
    enabled: yes
    masked: no
  become: yes
  
- name: Creando el archivo /etc/sysctl.d/k8s.conf
  copy:
    dest: "/etc/sysctl.d/k8s.conf"
    content: |
      net.bridge.bridge-nf-call-ip6tables = 1
      net.bridge.bridge-nf-call-iptables = 1
  become: yes

- name: Recargamos todas las variables de sysctl
  shell: sysctl --system
  become: yes
 
- name: descargar repo1
   shell: wget -O /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/CentOS_8_Stream/devel:kubic:libcontainers:stable.repo
   become: yes

- name: descargar repo2
  shell: wget -O /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1/CentOS_8_Stream/devel:kubic:libcontainers:stable:cri-o:1.23:1.23.1.repo
  become: yes
  
 - name: instalar paquetes
  dnf:
   name: cri-o
   state: latest
  become: yes

- name: copiar crio.conf
  shell: |
   sudo bash -c 'cat <<EOF> /etc/modules-load.d/crio.conf
   overlay
   br_netfilter
   EOF'
  become: yes

- name: iniciar servicio
  systemd:
   name: crio
   state: started
   enabled: true
  become: yes

- name: Configuramos el repositorio de Kubernetes
  yum_repository:
    name: Kubernetes
    description: Repositorio oficial de Kubernetes
    baseurl: https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
    enabled: yes
    gpgcheck: yes
    repo_gpgcheck: yes
    gpgkey: https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg
    exclude: kubelet kubeadm kubectl
  become: yes

- name: Instalamos Kubernetes
  dnf:
    name: "{{ kubernetes_packages }}"
    state: present
    disable_excludes: Kubernetes
  become: yes

- name: Habilitar e iniciamos el servicio de Kubernetes
  systemd:
    name: kubelet
    state: started
    enabled: yes
    masked: no
  become: yes
  
